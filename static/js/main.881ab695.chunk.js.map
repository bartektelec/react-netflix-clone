{"version":3,"sources":["assets/icons/svg/menu.svg","assets/icons/svg/search.svg","context/index.js","themes/GlobalStyle.js","components/molecules/SearchBar/SearchBar.js","routes/routeList.js","components/organisms/Navbar/Navbar.js","components/atoms/Card/Card.js","components/molecules/CardGrid/CardGrid.js","routes/CategoryView.js","components/atoms/Button/Button.js","components/molecules/HeroButtons/HeroButtons.js","components/organisms/HeroBanner/HeroBanner.js","routes/ItemView.js","views/MainView.js","Root.js","index.js","apikey.js"],"names":["module","exports","PageContext","createContext","KeyContext","GlobalStyle","createGlobalStyle","SearchResults","styled","ul","StyledLink","Link","StyledInput","input","StyledButton","button","searchIcon","StyledForm","form","SearchBar","handleCollapse","useState","query","setQuery","foundItems","setFoundItems","apikey","useContext","useEffect","removeResults","onSubmit","e","preventDefault","fetch","then","result","json","data","results","catch","err","type","placeholder","value","onChange","target","map","item","index","media_type","itemKey","id","releaseYear","release_date","replace","mediaType","key","onClick","to","title","name","routeList","path","StyledNav","nav","CollapsableMenu","div","isCollapsed","MenuList","MenuItem","NavLink","BrandLogo","StyledMenuBtn","HamburgerIcon","Navbar","setCollapse","src","alt","exact","CardBg","bg","CardTitle","p","Card","pageType","hrefLink","cardName","poster_path","backdrop_path","StyledWrapper","scroll","CardGrid","page","StyledHeading","h2","CategoryPage","setData","watchlist","headingText","response","isEditable","Button","a","primary","smFlex","HeroButtons","setWatchlist","searchQuery","href","newElement","newResult","prevResult","filter","length","localStorage","setItem","JSON","stringify","keyFrameAnim","keyframes","keyFrameAnimNarrow","StyledTitle","h1","StyledParagraph","HeroBg","HeroBanner","bgImage","overview","genres","genre","ItemPage","movie","setMovie","mediaId","CategoryView","MainView","params","match","initialWatchlist","parse","getItem","Provider","ItemView","Root","component","App","basename","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.881ab695.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/menu.b18eaddd.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.d20b124f.svg\";","import React from 'react';\nimport { createContext } from 'react';\n\nconst PageContext = createContext();\n\nconst KeyContext = createContext();\n\nexport { KeyContext };\n\nexport default PageContext;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n\n* {\n  box-sizing: border-box;\n}\n  html {\n    font-size: 62.5%;\n  }\n  body {\n      margin: 0;\n    font-family: 'Montserrat', sans-serif;\n    font-size: 1.6rem;\n    background-color: #000;\n  }\n  a {\n    text-decoration: none;\n  }\n\n  .active {\n      opacity: 1;\n  }\n  .container {\n    width: 100%;\n    max-width: 1200px\n  }\n\n`;\n\nexport default GlobalStyle;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { KeyContext } from 'context';\nimport { Link } from 'react-router-dom';\nimport searchIcon from 'assets/icons/svg/search.svg';\nimport styled from 'styled-components';\n\nconst SearchResults = styled.ul`\n  display: inline-block;\n  align-items: center;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  position: absolute;\n  background-color: #000;\n  color: #fff;\n  top: 100%;\n  left: 0%;\n  right: 0%;\n  z-index: 10;\n\n  @media (max-width: 800px) {\n    font-size: 2.4rem;\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  margin: 8px;\n  display: block;\n  color: #fff;\n  opacity: 0.6;\n  transition: opacity 0.3s ease;\n  :hover,\n  :active,\n  :focus {\n    opacity: 1;\n  }\n`;\n\nconst StyledInput = styled.input`\n  background: none;\n  border: none;\n  height: 24px;\n  border-bottom: 2px solid #fff;\n  margin: 0 1.6rem;\n  color: #fff;\n  opacity: 0.6;\n  font-size: 1.6rem;\n\n  @media (max-width: 800px) {\n    font-size: 2.4rem;\n    width: 100%;\n  }\n\n  :hover,\n  :active,\n  :focus {\n    opacity: 1;\n  }\n`;\n\nconst StyledButton = styled.button`\n  display: inline-block;\n  width: 24px;\n  height: 24px;\n  background: none;\n  border: none;\n  background-image: url(${searchIcon});\n  filter: invert(100%);\n  cursor: pointer;\n  opacity: 0.6;\n  transition: opacity 0.2s ease;\n\n  :hover,\n  :active,\n  :focus {\n    opacity: 1;\n  }\n`;\n\nconst StyledForm = styled.form`\n  position: relative;\n  display: inline-flex;\n  align-content: center;\n`;\n\nconst SearchBar = ({ handleCollapse }) => {\n  const [query, setQuery] = useState('');\n  const [foundItems, setFoundItems] = useState([]);\n  const apikey = useContext(KeyContext);\n\n  useEffect(() => {}, [query]);\n\n  const removeResults = () => {\n    setFoundItems();\n    handleCollapse();\n  };\n  const handleSearch = e => {\n    setQuery(e.target.value);\n    if (!e.target.value) {\n      removeResults();\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query) {\n      fetch(\n        `https://api.themoviedb.org/3/search/multi?api_key=${apikey}&language=en-US&page=1&include_adult=false&query=${query}`\n      )\n        .then(result => result.json())\n        .then(data => setFoundItems(data.results))\n        .catch(err => err);\n    } else {\n      removeResults();\n    }\n  };\n  return (\n    <>\n      <StyledForm onSubmit={handleSubmit}>\n        <StyledInput\n          type=\"text\"\n          placeholder=\"Search for a movie/tv show title\"\n          value={query}\n          onChange={handleSearch}\n        />\n        <StyledButton type=\"submit\" />\n        <SearchResults>\n          {foundItems &&\n            foundItems.map((item, index) => {\n              if (\n                (item.media_type === 'movie' && index < 10) ||\n                (item.media_type === 'tv' && index < 10)\n              ) {\n                const itemKey = `/${item.media_type}/${item.id}`;\n                const releaseYear = item.release_date\n                  ? item.release_date.replace(/-[0-9]{1,2}-[0-9]{1,2}/, ' ')\n                  : '';\n                const mediaType =\n                  item.media_type === 'movie' ? ' movie' : 'TV show';\n                return (\n                  <StyledLink\n                    key={itemKey}\n                    onClick={removeResults}\n                    to={itemKey}\n                  >\n                    {item.title || item.name}({releaseYear}\n                    {mediaType})\n                  </StyledLink>\n                );\n              }\n              return null;\n            })}\n        </SearchResults>\n      </StyledForm>\n    </>\n  );\n};\n\nexport default SearchBar;\n","const routeList = [\n  {\n    name: 'Home',\n    path: '/',\n  },\n  {\n    name: 'Movies',\n    path: '/movie/',\n  },\n  {\n    name: 'TV shows',\n    path: '/tv/',\n  },\n  {\n    name: 'My watchlist',\n    path: '/watchlist/',\n  },\n];\n\nexport default routeList;\n","import React, { useState } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport HamburgerIcon from 'assets/icons/svg/menu.svg';\nimport SearchBar from 'components/molecules/SearchBar/SearchBar';\nimport routeList from 'routes/routeList';\nimport styled from 'styled-components';\n\nconst StyledNav = styled.nav`\n  display: flex;\n  position: relative;\n  width: 100%;\n  height: 8rem;\n  align-items: center;\n  padding: 0 3rem;\n  background-color: #000;\n  @media (max-width: 800px) {\n    justify-content: space-between;\n  }\n`;\n\nconst CollapsableMenu = styled.div`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  background-color: #000;\n  transition: transform .2s ease, opacity .4s ease;\n  @media (max-width: 800px) {\n    padding: 1.6rem;\n    /* display: ${({ isCollapsed }) => (isCollapsed ? 'none' : 'flex')}; */\n    flex-direction: column;\n    position: absolute;\n    transform-origin: top;\n    transform: ${({ isCollapsed }) => isCollapsed && 'translateX(-100%)'};\n    opacity: ${({ isCollapsed }) => isCollapsed && '0'};\n    z-index: 9;\n    left: 0;\n    top: 8rem;\n  }\n`;\n\nconst MenuList = styled.ul`\n  padding: 0;\n  @media (max-width: 800px) {\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n  }\n`;\n\nconst MenuItem = styled(NavLink)`\n  margin-left: 3.2rem;\n  color: #fff;\n  opacity: 0.6;\n\n  :active,\n  :focus,\n  :hover {\n    opacity: 1;\n  }\n\n  @media (max-width: 800px) {\n    padding: 1.6rem 0;\n    font-size: 2.4rem;\n    margin: 0;\n  }\n`;\n\nconst BrandLogo = styled(Link)`\n  color: #ffd500;\n  font-weight: 600;\n`;\n\nconst StyledMenuBtn = styled.button`\n  background: none;\n  background-image: ${HamburgerIcon};\n  width: 4.8rem;\n  height: 4.8rem;\n  border: none;\n  filter: invert(100%);\n  display: none;\n  @media (max-width: 800px) {\n    display: inline-block;\n  }\n`;\n\nconst Navbar = () => {\n  const [isCollapsed, setCollapse] = useState('true');\n\n  const handleCollapse = () => {\n    setCollapse(!isCollapsed);\n  };\n  return (\n    <>\n      <StyledNav>\n        <BrandLogo to=\"/\">Lameflix</BrandLogo>\n        <StyledMenuBtn onClick={handleCollapse}>\n          <img src={HamburgerIcon} alt=\"Menu icon\" />\n        </StyledMenuBtn>\n        <CollapsableMenu isCollapsed={isCollapsed}>\n          <MenuList>\n            {routeList.map(item => (\n              <MenuItem\n                exact={item.path === '/'}\n                onClick={handleCollapse}\n                key={item.name}\n                to={item.path}\n              >\n                {item.name}\n              </MenuItem>\n            ))}\n          </MenuList>\n          <SearchBar handleCollapse={handleCollapse} />\n        </CollapsableMenu>\n      </StyledNav>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst CardBg = styled(Link)`\n  overflow: hidden;\n  position: relative;\n  display: inline-block;\n  margin: 1.6rem;\n  width: 200px;\n  height: 300px;\n  background-size: cover;\n  background-image: url(https://image.tmdb.org/t/p/w500/${({ bg }) => bg});\n  opacity: 0.6;\n  cursor: pointer;\n  transition-property: opacity, transform;\n  transition-duration: 0.3s;\n  transition-timing-function: ease;\n  :hover,\n  :active {\n    opacity: 1;\n    transform: scale(1.1);\n\n    > * {\n      transform: translateY(0);\n    }\n  }\n`;\n\nconst CardTitle = styled.p`\n  margin: 0;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: 1.6rem;\n  font-size: 1.8rem;\n  color: #fff;\n  background-color: rgba(0, 0, 0, 0.6);\n  transform: translateY(100%);\n  transition: transform 0.2s 0.2s ease;\n`;\n\nconst Card = ({ data, pageType }) => {\n  const hrefLink = `/${pageType}/${data.id}`;\n  const cardName = `${data.name || data.title}`;\n  return (\n    <CardBg\n      to={hrefLink}\n      name={cardName}\n      bg={data.poster_path || data.backdrop_path}\n    >\n      <CardTitle>{cardName}</CardTitle>\n    </CardBg>\n  );\n};\n\nexport default Card;\n","import React, { useContext } from 'react';\nimport PageContext from 'context';\nimport styled from 'styled-components';\nimport Card from 'components/atoms/Card/Card';\n\nconst StyledWrapper = styled.div`\n  width: auto;\n  display: ${({ scroll }) => (scroll ? 'inline-flex' : 'flex')};\n  flex-wrap: ${({ scroll }) => (scroll ? 'nowrap' : 'wrap')};\n  justify-content: space-around;\n`;\nconst CardGrid = ({ data, mediaType, scroll }) => {\n  const { page } = useContext(PageContext);\n  return (\n    <StyledWrapper scroll={scroll}>\n      {data.results &&\n        data.results.map(item => {\n          const pageType = item.type || page;\n          return <Card key={item.id} pageType={pageType} data={item} />;\n        })}\n    </StyledWrapper>\n  );\n};\n\nexport default CardGrid;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PageContext, { KeyContext } from 'context';\nimport styled from 'styled-components';\n\nimport CardGrid from 'components/molecules/CardGrid/CardGrid';\n\nconst StyledHeading = styled.h2`\n  color: #fff;\n  margin: 2.4rem;\n`;\n\nconst StyledWrapper = styled.div`\n  margin: 2.4rem;\n  width: auto;\n  overflow-x: auto;\n  overflow-y: hidden;\n`;\n\nconst CategoryPage = ({ scroll = false }) => {\n  const [data, setData] = useState([]);\n  const { page, watchlist } = useContext(PageContext);\n  const apikey = useContext(KeyContext);\n  const pageType = page || 'tv';\n\n  const headingText = (() => {\n    switch (pageType) {\n      case 'movie':\n        return 'Popular movies';\n      case 'tv':\n        return 'Popular TV series';\n      case 'watchlist':\n        return 'Your watchlist';\n      default:\n        return 'Home';\n    }\n  })();\n  useEffect(() => {\n    if (pageType === 'watchlist') {\n      setData(watchlist);\n    } else {\n      fetch(\n        `https://api.themoviedb.org/3/discover/${pageType}?api_key=${apikey}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1`\n      )\n        .then(result => result.json())\n        .then(response => setData(response));\n    }\n  }, [page]);\n\n  return (\n    <>\n      <StyledHeading>{headingText}</StyledHeading>\n      <StyledWrapper>\n        <CardGrid\n          scroll={scroll}\n          data={data}\n          isEditable={pageType === 'watchlist'}\n        />\n      </StyledWrapper>\n    </>\n  );\n};\n\nexport default CategoryPage;\n","import styled from 'styled-components';\n\nconst Button = styled.a`\n  margin: 8px;\n  display: inline-block;\n  padding: 18px 16px;\n  background: ${({ primary }) => (primary ? '#fff' : 'none')};\n  border-radius: 5px;\n  border: 1px solid #fff;\n  color: ${({ primary }) => (primary ? '#000' : '#fff')};\n  cursor: pointer;\n  transition: opacity 0.2s ease, background-color 0.1s ease;\n\n  :hover,\n  :focus,\n  :active {\n    background: #fff;\n    color: #000;\n    opacity: 0.9;\n  }\n\n  @media (max-width: 768px) {\n    display: ${({ smFlex }) => smFlex || 1};\n  }\n`;\n\nexport default Button;\n","import React, { useContext } from 'react';\nimport PageContext from 'context';\nimport Button from 'components/atoms/Button/Button';\n\nconst HeroButtons = ({ data }) => {\n  const { watchlist, setWatchlist, page } = useContext(PageContext);\n  const searchQuery = `https://google.com/search?q=Watch ${data.title ||\n    data.name} Online`;\n\n  const addToWatchlist = () => {\n    const { id, backdrop_path, poster_path, name, title } = data;\n    const newElement = { id, backdrop_path, poster_path, name, title };\n    newElement.type = page;\n    const newResult = (() => {\n      if (watchlist.results) {\n        const prevResult = watchlist.results;\n        const sameElements = prevResult.filter(\n          item => item.id === newElement.id && item.type === newElement.type\n        );\n        if (sameElements.length) {\n          return { results: [...prevResult] };\n        }\n        return { results: [...prevResult, newElement] };\n      }\n\n      return { results: [newElement] };\n    })();\n    setWatchlist(newResult);\n    localStorage.setItem('lameWatchlist', JSON.stringify(newResult));\n  };\n\n  return (\n    <>\n      <Button href={searchQuery} primary=\"true\">\n        Watch now\n      </Button>\n      <Button onClick={addToWatchlist}>Add to list</Button>\n    </>\n  );\n};\n\nexport default HeroButtons;\n","import React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport HeroButtons from 'components/molecules/HeroButtons/HeroButtons';\n\nconst keyFrameAnim = keyframes`\n0% {\n    background-position: top center;\n}\n\n100% {\n    background-position: bottom center;\n}\n`;\nconst keyFrameAnimNarrow = keyframes`\n0% {\n    background-position: top left;\n}\n\n100% {\n    background-position: bottom right;\n}\n`;\n\nconst StyledTitle = styled.h1`\n  color: #fff;\n  font-size: 4.8rem;\n  font-weight: 600;\n\n  @media (max-width: 550px) {\n    padding-top: 24rem;\n  }\n`;\n\nconst StyledParagraph = styled.p`\n  color: #fff;\n  font-size: 1.6rem;\n  width: 500px;\n\n  @media (max-width: 550px) {\n    width: 100%;\n    &:first-of-type {\n      display: none;\n    }\n  }\n`;\n\nconst HeroBg = styled.div`\n  padding: 4.8rem;\n  background-size: cover;\n  background-position: center center;\n  background-image: linear-gradient(90deg, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0)),\n    url(${({ bg }) => bg && bg});\n  animation: ${keyFrameAnim} 25s ease infinite alternate;\n\n  @media (max-width: 550px) {\n    background-image: linear-gradient(\n        0deg,\n        rgba(0, 0, 0, 1) 30%,\n        rgba(0, 0, 0, 0)\n      ),\n      url(${({ bg }) => bg && bg});\n\n    display: flex;\n    flex-direction: column;\n    animation-name: ${keyFrameAnimNarrow};\n    animation-duration: 45s;\n    & > * {\n      text-align: center;\n    }\n  }\n`;\n\nconst HeroBanner = ({ data }) => {\n  let bgImage = 'https://via.placeholder.com/640x360';\n  if (data.backdrop_path || data.poster_path) {\n    bgImage = data.backdrop_path\n      ? `https://image.tmdb.org/t/p/original/${data.backdrop_path}`\n      : `https://image.tmdb.org/t/p/original/${data.poster_path}`;\n  }\n  return (\n    <HeroBg bg={bgImage}>\n      <StyledTitle>{data.title || data.name}</StyledTitle>\n      <StyledParagraph>{data.overview}</StyledParagraph>\n      <HeroButtons data={data} />\n      <StyledParagraph>\n        Genre:\n        {data.genres &&\n          data.genres.map(genre => <span key={genre.id}> {genre.name}</span>)}\n      </StyledParagraph>\n    </HeroBg>\n  );\n};\n\nexport default HeroBanner;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PageContext, { KeyContext } from 'context';\nimport HeroBanner from 'components/organisms/HeroBanner/HeroBanner';\nimport CategoryView from 'routes/CategoryView';\n\nconst ItemPage = () => {\n  const [movie, setMovie] = useState({});\n  const { id, page } = useContext(PageContext);\n  const apikey = useContext(KeyContext);\n  const mediaId = id || 456;\n  const mediaType = page || 'tv';\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/${mediaType}/${mediaId}?api_key=${apikey}&language=en-US`\n    )\n      .then(response => response.json())\n      .then(response => setMovie(response))\n      .catch(err => err);\n  }, [mediaType, mediaId]);\n  return (\n    <>\n      <HeroBanner data={movie} />\n      <CategoryView scroll={true} />\n    </>\n  );\n};\n\nexport default ItemPage;\n","import React, { useState } from 'react';\nimport PageContext from 'context';\nimport CategoryView from 'routes/CategoryView';\nimport ItemView from 'routes/ItemView';\nimport apikey from 'apikey.js';\n\nconst MainView = ({ match: { params } }) => {\n  const initialWatchlist = JSON.parse(localStorage.getItem('lameWatchlist'));\n  const [watchlist, setWatchlist] = useState(initialWatchlist || {});\n  if (!params.page) {\n    params = { page: 'tv', id: '456' };\n  }\n  return (\n    <PageContext.Provider value={{ ...params, watchlist, setWatchlist }}>\n      {params.id ? <ItemView /> : <CategoryView />}\n    </PageContext.Provider>\n  );\n};\n\nexport default MainView;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Navbar from 'components/organisms/Navbar/Navbar';\nimport MainView from 'views/MainView';\n\nconst Root = () => {\n  return (\n    <>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\" component={MainView} />\n        <Route path={['/:page/:id', '/:page/']} component={MainView} />\n      </Switch>\n    </>\n  );\n};\n\nexport default Root;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport { KeyContext } from 'context';\nimport { HashRouter } from 'react-router-dom';\nimport GlobalStyle from 'themes/GlobalStyle';\nimport apikey from 'apikey.js';\nimport Root from './Root';\n\nconst App = () => (\n  <KeyContext.Provider value={apikey}>\n    <HashRouter basename=\"/\">\n      <GlobalStyle />\n      <Root />\n    </HashRouter>\n  </KeyContext.Provider>\n);\n\nReactDOM.render(<App />, document.getElementById('root'));\n","const apikey = 'da4622c209e92f622296706520a36d5f';\n\nexport default apikey;\n"],"sourceRoot":""}