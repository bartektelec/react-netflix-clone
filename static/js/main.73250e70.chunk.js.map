{"version":3,"sources":["assets/icons/svg/search.svg","themes/GlobalStyle.js","components/molecules/SearchBar/SearchBar.js","components/organisms/Navbar/Navbar.js","routes/CategoryView.js","components/atoms/Button/Button.js","components/molecules/HeroButtons/HeroButtons.js","components/organisms/HeroBanner/HeroBanner.js","routes/ItemView.js","views/MainView.js","Root.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","SearchResults","styled","ul","StyledLink","Link","StyledInput","input","StyledButton","button","searchIcon","StyledForm","form","SearchBar","useState","query","setQuery","foundItems","setFoundItems","useEffect","onSubmit","e","preventDefault","fetch","then","result","json","data","results","catch","err","type","value","onChange","target","map","item","index","media_type","itemKey","id","releaseYear","release_date","replace","mediaType","key","to","title","name","StyledNav","nav","CollapsableMenu","div","MenuList","MenuItem","NavLink","BrandLogo","Navbar","exact","CategoryPage","page","Button","a","primary","smFlex","HeroButtons","searchQuery","href","keyFrameAnim","keyframes","StyledTitle","h1","StyledParagraph","p","HeroBg","bg","HeroBanner","bgImage","params","backdrop_path","poster_path","overview","genres","genre","ItemPage","mediaId","movie","setMovie","response","MainView","match","CategoryView","ItemView","Root","path","component","ReactDOM","render","document","getElementById"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,oC,igBCE3C,IAuBeC,EAvBKC,YAAH,K,szCCGjB,IAAMC,EAAgBC,IAAOC,GAAV,KAcbC,EAAaF,YAAOG,IAAPH,CAAH,KAaVI,EAAcJ,IAAOK,MAAV,KAiBXC,EAAeN,IAAOO,OAAV,IAMQC,KAapBC,EAAaT,IAAOU,KAAV,KA+DDC,EAzDG,WAAO,IAAD,EACIC,mBAAS,IADb,mBACfC,EADe,KACRC,EADQ,OAEcF,mBAAS,IAFvB,mBAEfG,EAFe,KAEHC,EAFG,KAItBC,qBAAU,cAAU,CAACJ,IAoBrB,OACE,oCACE,kBAACJ,EAAD,CAAYS,SAhBK,SAAAC,GACnBA,EAAEC,iBACEP,GACFQ,MAAM,sIAAD,OACmIR,IAErIS,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UACtBF,MAAK,SAAAG,GAAI,OAAIT,EAAcS,EAAKC,YAChCC,OAAM,SAAAC,GAAG,OAAIA,KAChBd,EAAS,KAETE,EAAc,MAMZ,kBAACZ,EAAD,CAAayB,KAAK,OAAOC,MAAOjB,EAAOkB,SArBxB,SAAAZ,GACnBL,EAASK,EAAEa,OAAOF,UAqBd,kBAACxB,EAAD,CAAcuB,KAAK,WACnB,kBAAC9B,EAAD,KACGgB,GACCA,EAAWkB,KAAI,SAACC,EAAMC,GACpB,GACuB,UAApBD,EAAKE,YAA0BD,EAAQ,IACnB,OAApBD,EAAKE,YAAuBD,EAAQ,GACrC,CACA,IAAME,EAAO,WAAOH,EAAKE,WAAZ,YAA0BF,EAAKI,IACtCC,EAAcL,EAAKM,aACrBN,EAAKM,aAAaC,QAAQ,yBAA0B,KACpD,GACEC,EACgB,UAApBR,EAAKE,WAAyB,SAAW,UAC3C,OACE,kBAAClC,EAAD,CAAYyC,IAAKN,EAASO,GAAIP,GAC3BH,EAAKW,OAASX,EAAKY,KADtB,IAC6BP,EAC1BG,EAFH,KAMJ,OAAO,Y,4tBCtHrB,IAAMK,EAAY/C,IAAOgD,IAAV,KAQTC,EAAkBjD,IAAOkD,IAAV,KAOfC,EAAWnD,IAAOC,GAAV,KAIRmD,EAAWpD,YAAOqD,IAAPrD,CAAH,KAYRsD,EAAYtD,YAAOG,IAAPH,CAAH,KA0BAuD,EArBA,WACb,OACE,oCACE,kBAACR,EAAD,KACE,kBAACO,EAAD,CAAWV,GAAG,KAAd,YACA,kBAACK,EAAD,KACE,kBAACE,EAAD,KACE,kBAACC,EAAD,CAAUI,OAAK,EAACZ,GAAG,KAAnB,QAGA,kBAACQ,EAAD,CAAUR,GAAG,YAAb,UACA,kBAACQ,EAAD,CAAUR,GAAG,QAAb,YACA,kBAACQ,EAAD,CAAUR,GAAG,eAAb,iBAEF,kBAAC,EAAD,UC7CKa,EARM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtB,OACE,oCACE,uCAAaA,K,8cCHnB,IAwBeC,EAxBA3D,IAAO4D,EAAV,KAII,qBAAGC,QAAyB,OAAS,UAG1C,qBAAGA,QAAyB,OAAS,UAajC,qBAAGC,QAAuB,KCN1BC,EAbK,SAAC,GAAc,IAAZtC,EAAW,EAAXA,KACfuC,EAAW,4CAAwCvC,EAAKoB,OAC5DpB,EAAKqB,KADU,WAEjB,OACE,oCACE,kBAAC,EAAD,CAAQmB,KAAMD,EAAaH,QAAQ,QAAnC,aAGA,kBAAC,EAAD,sB,wtBCPN,IAAMK,EAAeC,YAAH,KAUZC,EAAcpE,IAAOqE,GAAV,KAMXC,EAAkBtE,IAAOuE,EAAV,KAMfC,EAASxE,IAAOkD,IAAV,KAKF,gBAAGuB,EAAH,EAAGA,GAAH,OAAYA,GAAMA,IACbP,GAwBAQ,EArBI,SAAC,GAAsB,IAApBjD,EAAmB,EAAnBA,KACdkD,GADiC,EAAbC,OACVnD,EAAKoD,cAAL,8CAC2BpD,EAAKoD,eADhC,8CAE2BpD,EAAKqD,cAChD,OACE,kBAACN,EAAD,CAAQC,GAAIE,GACV,kBAACP,EAAD,KAAc3C,EAAKoB,OAASpB,EAAKqB,MACjC,kBAACwB,EAAD,KAAkB7C,EAAKsD,UACvB,kBAAC,EAAD,CAAatD,KAAMA,IACnB,kBAAC6C,EAAD,mEAGA,kBAACA,EAAD,cAEG7C,EAAKuD,QACJvD,EAAKuD,OAAO/C,KAAI,SAAAgD,GAAK,OAAI,0BAAMtC,IAAKsC,EAAM3C,IAAjB,IAAuB2C,EAAMnC,YC5BjDoC,EAnBE,SAAC,GAA8B,IAAD,IAA3BN,OAAUtC,EAAiB,EAAjBA,GAAIT,EAAa,EAAbA,KAC1BsD,EAAU7C,GAAM,IAChBI,EAAYb,GAAQ,KAFmB,EAGnBjB,mBAAS,IAHU,mBAGtCwE,EAHsC,KAG/BC,EAH+B,KAY7C,OARApE,qBAAU,WACRI,MAAM,gCAAD,OAC6BqB,EAD7B,YAC0CyC,EAD1C,6DAGF7D,MAAK,SAAAgE,GAAQ,OAAIA,EAAS9D,UAC1BF,MAAK,SAAAgE,GAAQ,OAAID,EAASC,MAC1B3D,OAAM,SAAAC,GAAG,OAAIA,OACf,CAACc,EAAWyC,IAEb,oCACE,kBAAC,EAAD,CAAY1D,KAAM2D,MCDTG,EAZE,SAAC,GAA2B,IAAhBX,EAAe,EAAxBY,MAASZ,OAC3B,OACE,oCACGA,EAAOlB,KACN,kBAAC+B,EAAD,CAAc/B,KAAMkB,EAAOlB,OAE3B,kBAACgC,EAAD,CAAUd,OAAQA,MCOXe,EAZF,WACX,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOnC,OAAK,EAACoC,KAAK,IAAIC,UAAWN,IACjC,kBAAC,IAAD,CAAOK,KAAM,CAAC,aAAc,WAAYC,UAAWN,OCE3DO,IAASC,OAAO,mBAPJ,kBACV,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,SAIY,MAASC,SAASC,eAAe,W","file":"static/js/main.73250e70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.d20b124f.svg\";","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n    font-size: 62.5%;\r\n  }\r\n  body {\r\n      margin: 0;\r\n    font-family: 'Montserrat', sans-serif;\r\n    font-size: 1.6rem;\r\n    background-color: #333;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n\r\n  .active {\r\n      opacity: 1;\r\n  }\r\n  .container {\r\n    width: 100%;\r\n    max-width: 1200px\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport searchIcon from 'assets/icons/svg/search.svg';\r\nimport styled from 'styled-components';\r\n\r\nconst SearchResults = styled.ul`\r\n  display: inline-block;\r\n  align-items: center;\r\n  list-style: none;\r\n  padding: 0;\r\n  margin: 0;\r\n  position: absolute;\r\n  background-color: #000;\r\n  color: #fff;\r\n  top: 100%;\r\n  left: 0%;\r\n  right: 0%;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  margin: 8px;\r\n  display: block;\r\n  color: #fff;\r\n  opacity: 0.6;\r\n  transition: opacity 0.3s ease;\r\n  :hover,\r\n  :active,\r\n  :focus {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  background: none;\r\n  border: none;\r\n  height: 24px;\r\n  border-bottom: 2px solid #fff;\r\n  margin: 0 1.6rem;\r\n  color: #fff;\r\n  opacity: 0.6;\r\n  font-size: 1.6rem;\r\n\r\n  :hover,\r\n  :active,\r\n  :focus {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled.button`\r\n  display: inline-block;\r\n  width: 24px;\r\n  height: 24px;\r\n  background: none;\r\n  border: none;\r\n  background-image: url(${searchIcon});\r\n  filter: invert(100%);\r\n  cursor: pointer;\r\n  opacity: 0.6;\r\n  transition: opacity 0.2s ease;\r\n\r\n  :hover,\r\n  :active,\r\n  :focus {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  position: relative;\r\n  display: inline-flex;\r\n  align-content: center;\r\n`;\r\n\r\nconst SearchBar = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [foundItems, setFoundItems] = useState([]);\r\n\r\n  useEffect(() => {}, [query]);\r\n\r\n  const handleSearch = e => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (query) {\r\n      fetch(\r\n        `https://api.themoviedb.org/3/search/multi?api_key=da4622c209e92f622296706520a36d5f&language=en-US&page=1&include_adult=false&query=${query}`\r\n      )\r\n        .then(result => result.json())\r\n        .then(data => setFoundItems(data.results))\r\n        .catch(err => err);\r\n      setQuery('');\r\n    } else {\r\n      setFoundItems('');\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <StyledForm onSubmit={handleSubmit}>\r\n        <StyledInput type=\"text\" value={query} onChange={handleSearch} />\r\n        <StyledButton type=\"submit\" />\r\n        <SearchResults>\r\n          {foundItems &&\r\n            foundItems.map((item, index) => {\r\n              if (\r\n                (item.media_type === 'movie' && index < 10) ||\r\n                (item.media_type === 'tv' && index < 10)\r\n              ) {\r\n                const itemKey = `/${item.media_type}/${item.id}`;\r\n                const releaseYear = item.release_date\r\n                  ? item.release_date.replace(/-[0-9]{1,2}-[0-9]{1,2}/, ' ')\r\n                  : '';\r\n                const mediaType =\r\n                  item.media_type === 'movie' ? ' movie' : 'TV show';\r\n                return (\r\n                  <StyledLink key={itemKey} to={itemKey}>\r\n                    {item.title || item.name}({releaseYear}\r\n                    {mediaType})\r\n                  </StyledLink>\r\n                );\r\n              }\r\n              return null;\r\n            })}\r\n        </SearchResults>\r\n      </StyledForm>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport SearchBar from 'components/molecules/SearchBar/SearchBar';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNav = styled.nav`\r\n  display: flex;\r\n  height: 8rem;\r\n  align-items: center;\r\n  padding: 0 3rem;\r\n  background-color: #000;\r\n`;\r\n\r\nconst CollapsableMenu = styled.div`\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst MenuList = styled.ul`\r\n  padding: 0;\r\n`;\r\n\r\nconst MenuItem = styled(NavLink)`\r\n  margin-left: 3.2rem;\r\n  color: #fff;\r\n  opacity: 0.6;\r\n\r\n  :active,\r\n  :focus,\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst BrandLogo = styled(Link)`\r\n  color: #ffd500;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <StyledNav>\r\n        <BrandLogo to=\"/\">Lameflix</BrandLogo>\r\n        <CollapsableMenu>\r\n          <MenuList>\r\n            <MenuItem exact to=\"/\">\r\n              Home\r\n            </MenuItem>\r\n            <MenuItem to=\"/movies/\">Movies</MenuItem>\r\n            <MenuItem to=\"/tv/\">TV shows</MenuItem>\r\n            <MenuItem to=\"/watchlist/\">My watchlist</MenuItem>\r\n          </MenuList>\r\n          <SearchBar />\r\n        </CollapsableMenu>\r\n      </StyledNav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst CategoryPage = ({ page }) => {\r\n  return (\r\n    <>\r\n      <h1>Showing {page}</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryPage;\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.a`\r\n  margin: 8px;\r\n  display: inline-block;\r\n  padding: 18px 16px;\r\n  background: ${({ primary }) => (primary ? '#fff' : 'none')};\r\n  border-radius: 5px;\r\n  border: 1px solid #fff;\r\n  color: ${({ primary }) => (primary ? '#000' : '#fff')};\r\n  cursor: pointer;\r\n  transition: opacity 0.2s ease, background-color 0.1s ease;\r\n\r\n  :hover,\r\n  :focus,\r\n  :active {\r\n    background: #fff;\r\n    color: #000;\r\n    opacity: 0.9;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    display: ${({ smFlex }) => smFlex || 1};\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Button from 'components/atoms/Button/Button';\r\n\r\nconst HeroButtons = ({ data }) => {\r\n  const searchQuery = `https://google.com/search?q=Watch ${data.title ||\r\n    data.name} Online`;\r\n  return (\r\n    <>\r\n      <Button href={searchQuery} primary=\"true\">\r\n        Watch now\r\n      </Button>\r\n      <Button>Add to list</Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeroButtons;\r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport HeroButtons from 'components/molecules/HeroButtons/HeroButtons';\r\n\r\nconst keyFrameAnim = keyframes`\r\n0% {\r\n    background-position: top center;\r\n}\r\n\r\n100% {\r\n    background-position: bottom center;\r\n}\r\n`;\r\n\r\nconst StyledTitle = styled.h1`\r\n  color: #fff;\r\n  font-size: 4.8rem;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst StyledParagraph = styled.p`\r\n  color: #fff;\r\n  font-size: 1.6rem;\r\n  width: 500px;\r\n`;\r\n\r\nconst HeroBg = styled.div`\r\n  padding: 4.8rem;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  background-image: linear-gradient(90deg, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0)),\r\n    url(${({ bg }) => bg && bg});\r\n  animation: ${keyFrameAnim} 25s ease infinite alternate;\r\n`;\r\n\r\nconst HeroBanner = ({ data, params }) => {\r\n  const bgImage = data.backdrop_path\r\n    ? `https://image.tmdb.org/t/p/original/${data.backdrop_path}`\r\n    : `https://image.tmdb.org/t/p/original/${data.poster_path}`;\r\n  return (\r\n    <HeroBg bg={bgImage}>\r\n      <StyledTitle>{data.title || data.name}</StyledTitle>\r\n      <StyledParagraph>{data.overview}</StyledParagraph>\r\n      <HeroButtons data={data} />\r\n      <StyledParagraph>\r\n        Starring: Dan Castellaneta, Julie Kavner, Nancy Cartwright\r\n      </StyledParagraph>\r\n      <StyledParagraph>\r\n        Genre:\r\n        {data.genres &&\r\n          data.genres.map(genre => <span key={genre.id}> {genre.name}</span>)}\r\n      </StyledParagraph>\r\n    </HeroBg>\r\n  );\r\n};\r\n\r\nexport default HeroBanner;\r\n","import React, { useEffect, useState } from 'react';\r\nimport HeroBanner from 'components/organisms/HeroBanner/HeroBanner';\r\n\r\nconst ItemPage = ({ params: { id, type } }) => {\r\n  const mediaId = id || 456;\r\n  const mediaType = type || 'tv';\r\n  const [movie, setMovie] = useState({});\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/${mediaType}/${mediaId}?api_key=da4622c209e92f622296706520a36d5f&language=en-US`\r\n    )\r\n      .then(response => response.json())\r\n      .then(response => setMovie(response))\r\n      .catch(err => err);\r\n  }, [mediaType, mediaId]);\r\n  return (\r\n    <>\r\n      <HeroBanner data={movie} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ItemPage;\r\n","import React from 'react';\r\nimport CategoryView from 'routes/CategoryView';\r\nimport ItemView from 'routes/ItemView';\r\n\r\nconst MainView = ({ match: { params } }) => {\r\n  return (\r\n    <>\r\n      {params.page ? (\r\n        <CategoryView page={params.page} />\r\n      ) : (\r\n        <ItemView params={params} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainView;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Navbar from 'components/organisms/Navbar/Navbar';\r\nimport MainView from 'views/MainView';\r\n\r\nconst Root = () => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={MainView} />\r\n        <Route path={['/:type/:id', '/:page/']} component={MainView} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport GlobalStyle from 'themes/GlobalStyle';\r\nimport Root from './Root';\r\n\r\nconst App = () => (\r\n  <BrowserRouter>\r\n    <GlobalStyle />\r\n    <Root />\r\n  </BrowserRouter>\r\n);\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}